# vim:ft=sh
VPN_USER=user@email.com
VPN_PASS=password
POSTGRES_PASSWORD='db_pass'
DB_PASSWORD='db_pass' # Might not be used?
DB_PASS='db_pass'
SMTP_PASS=password_smtp
SMTP_PASSWORD=password_smtp
PGADMIN_DEFAULT_PASSWORD=password
NEXTCLOUD_ADMIN_PASSWORD=password
WEBPASSWORD=password
GF_SECURITY_ADMIN_PASSWORD=password
IMAP_PASS=password_smtp
MAYAN_DATABASE_PASSWORD=password
WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD=password_smtp

# Generate alphanumeric strings at least 64 chars long.
# Try using: pwgen -Bsv1 64
GITLAB_SECRETS_OTP_KEY_BASE=asdf
GITLAB_SECRETS_DB_KEY_BASE=asdf
GITLAB_SECRETS_SECRET_KEY_BASE=asdf

# HMAC url validation key (base64 encoded) to prevent direct URL opening. Leave blank to disable validation. Use command below to generate:
# openssl rand -base64 33
MORTY_KEY=asdf

# Create a Secret Key for Rails
#
# You can generate a secure one through the Greenlight docker image
# with the command.
#
#   docker run --rm bigbluebutton/greenlight:v2 bundle exec rake secret
#SECRET_KEY_BASE=asdf

# The endpoint and secret for your BigBlueButton server.
# Set these if you are running GreenLight on a single BigBlueButton server.
# You can retrive these by running the following command on your BigBlueButton server:
#
#   bbb-conf --secret
#
#BIGBLUEBUTTON_ENDPOINT=asdf
#BIGBLUEBUTTON_SECRET=asdf

# Jitsi Secrets
# Generate with:
#    openssl rand -hex 16
JICOFO_COMPONENT_SECRET=asdf
JICOFO_AUTH_PASSWORD=asdf
JVB_AUTH_PASSWORD=asdf
