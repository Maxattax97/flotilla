#!/bin/bash

SCRIPTPATH="$( cd "$(dirname "$0")" ; pwd -P )"
GITROOT="${SCRIPTPATH}"
COMPOSE_FILE=/opt/flotilla/docker-compose.yml

if [ -s "${GITROOT}/scripts/sys_lib.sh" ]; then
    SCRIPTS="${GITROOT}/scripts"
else
    SCRIPTS="/usr/local/lib/flotilla/scripts"
fi

source "${SCRIPTS}/sys_lib.sh"


case "$1" in
    "install" | "in" | "i")
        "${SCRIPTS}/sys_install.sh"
        ;;
    "update" | "up" | "u")
        "${SCRIPTS}/sys_update.sh"
        ;;
    "start")
        elevate systemctl start flotilla.service
        ;;
    "stop")
        elevate systemctl stop flotilla.service
        ;;
    "restart")
        flotilla stop
        flotilla start
        ;;
    "status" | "stat")
        elevate systemctl status flotilla.service
        elevate journalctl -f -u flotilla.service
        ;;
    "follow" | "f")
        #elevate journalctl -f -u flotilla.service
        docker-compose --file "${COMPOSE_FILE}" logs --follow
        ;;
    "ovpn")
        # NOTE: OpenVPN must be running?
        case "$2" in
            "generate")
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn easyrsa build-client-full $3 nopass
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn ovpn_getclient "$3" > "$3.ovpn"
                ;;
            "get")
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn ovpn_getclient "$3" > "$3.ovpn"
                ;;
            "revoke")
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn ovpn_revokeclient "$3"
                ;;
            "remove")
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn ovpn_revokeclient "$3" remove
                ;;
            "list")
                docker-compose --file "${COMPOSE_FILE}" run --rm openvpn ovpn_listclients
                ;;
            #"backup")
                #docker-compose --file "${COMPOSE_FILE}" run --rm openvpn tar -cvf - -C /etc openvpn | xz > openvpn-backup.tar.xz
                #;;
            *)
                echo "Usage: flotilla ovpn <generate | get | revoke | remove | list>"
                ;;
        esac
        ;;
    "ips")
        case "$2" in
            "test")
                elevate suricata -T -c /etc/suricata/suricata.yaml
                if [[ "$?" -ne 0 ]]; then
                    exit 1
                fi
                ;;
            "up")
                #flotilla ips test
                #if [[ "$?" -ne 0 ]]; then
                    #exit 1
                #fi

                elevate systemctl start suricata.service

                # NOTE: Dangerous! Can disrupt the SSH connection if Suricata fails.
                #elevate iptables -A INPUT -j NFQUEUE
                #elevate iptables -A OUTPUT -j NFQUEUE
                ;;
            "down")
                #elevate iptables -D INPUT -j NFQUEUE
                #elevate iptables -D OUTPUT -j NFQUEUE
                elevate systemctl stop suricata.service
                ;;
            "update")
                elevate suricata-update
                ;;
            "status")
                elevate systemctl status suricata.service
                elevate journalctl -f -u suricata.service
                ;;
            *)
                echo "Usage: flotilla ips <test | up | down | update | status>"
                ;;
        esac
        ;;
    "fw")
        case "$2" in
            "status")
                sudo ufw status verbose # numbered
                ;;
            "enable")
                sudo ufw enable
                ;;
            "disable")
                sudo ufw disable
                ;;
            "update")
                sudo ufw reset
                sudo ufw default allow outgoing
                sudo ufw default deny incoming
                sudo ufw default allow incoming from 192.168.0.0/16
                sudo ufw default allow incoming from 172.16.0.0/12
                sudo ufw default allow incoming from 10.0.0.0/8
                sudo ufw logging on
                sudo ufw allow 22/tcp       # SSH
                sudo ufw limit 22/tcp
                sudo ufw allow 25/tcp       # SMTP
                sudo ufw allow 53           # DNS
                sudo ufw allow 67/udp       # DHCP
                sudo ufw allow 80           # HTTP
                sudo ufw allow 443          # HTTPS
                sudo ufw allow 1194/udp     # OpenVPN
                sudo ufw allow 6881         # QBittorrent
                sudo ufw allow 25565        # Minecraft
                sudo ufw allow 27015        # Steam
                ;;
            *)
                echo "Usage: flotilla fw <status | enable | disable | update>"
                ;;
        esac
        ;;
    *)
        echo "Usage: flotilla <install | update | start | stop | restart | status | follow | ovpn | ips | fw>"
        ;;
esac
