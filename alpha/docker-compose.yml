---
version: "3.7"
# Services:
  # Jenkins
  # Blog
  # Mayan
  # Email server
  # Joplin
  # Searx https://github.com/linuxserver/Heimdall/issues/307
  # PrivateBin
  # Syncthing?
  # EteSync?
  # Bitwarden?
  # Mining operation?
  # Squid Proxy? Shadowsocks? Or other proxy
  # IRC
  # TOR Node, hidden service
  # i2p
  # KVM?
  # LDAP?
  # Matomo
# Organization
  # TODO: Apply consistent port assignment scheme.
  # TODO: Segregate services into subnetworks.
# Security
  # :Z is private Docker share (guarded by SELinux); these files are for that
  # container only.
  # :z is public Docker share (guarded by SELinux); these files are for several
  # containers to share.
volumes:
  kimai_public:
services:
  letsencrypt:
    image: linuxserver/swag
    container_name: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - URL=maxocull.com
      # apartment,bbb,irc,meet,
      - SUBDOMAINS=analytics,bazarr,books,ci,cloud,dash,dns,doc,git,grafana,hashcat,jackett,kimai,librarian,lidarr,map,mastodon,media,office,openvpn,pgadmin,portainer,prometheus,prowlarr,radarr,registry,resolute,rss,search,sonarr,torrent,whoami,wireguard,www,znc
      - VALIDATION=http # DNS? so can use wildcards
      #- DNSPLUGIN=cloudflare #optional
      #- DUCKDNSTOKEN=<token> #optional
      - EMAIL=max.ocull@protonmail.com
      #- DHLEVEL=2048 # No longer used?
      - ONLY_SUBDOMAINS=false
      # apartment.maxocull.net,bbb.maxocull.net,irc.maxocull.net,meet.maxocull.net,
      - EXTRA_DOMAINS=git.alanocull.com,maxocull.net,analytics.maxocull.net,bazarr.maxocull.net,books.maxocull.net,ci.maxocull.net,cloud.maxocull.net,dash.maxocull.net,dns.maxocull.net,doc.maxocull.net,git.maxocull.net,grafana.maxocull.net,hashcat.maxocull.net,jackett.maxocull.net,kimai.maxocull.net,librarian.maxocull.net,lidarr.maxocull.net,map.maxocull.net,mastodon.maxocull.net,media.maxocull.net,office.maxocull.net,openvpn.maxocull.net,pgadmin.maxocull.net,portainer.maxocull.net,prometheus.maxocull.net,prowlarr.maxocull.net,radarr.maxocull.net,registry.maxocull.net,resolute.maxocull.net,rss.maxocull.net,search.maxocull.net,sonarr.maxocull.net,torrent.maxocull.net,whoami.maxocull.net,wireguard.maxocull.net,www.maxocull.net,znc.maxocull.net
      - STAGING=false # Enable when testing.
      - DOCKER_MODS=linuxserver/mods:swag-dashboard
    volumes:
      - /opt/flotilla/data/letsencrypt/keys:/config/etc/letsencrypt:Z
      - /opt/flotilla/data/letsencrypt/www:/config/www:Z
      - /opt/flotilla/config/letsencrypt:/config:z
      - /opt/flotilla/data/all/logs/letsencrypt:/config/log:z
    #volumes_from:
      # used for FPM
      #- nextcloud
    ports:
      - "80:80"
      - "81:81" # used for dashboard mod
      - "443:443"
    #deploy:
      #resources:
        #limits:
          #memory: "1g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  weblog:
    image: node:lts
    container_name: weblog
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - NODE_ENV=production
    user: "node"
    working_dir: /home/node/weblog
    command: "npm run serve"
    volumes:
      - /opt/flotilla/data/weblog:/home/node/weblog:z
    ports:
      - "127.0.0.1:4000:4000"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #coursewatcher:
    #image: node:lts
    #container_name: coursewatcher
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- NODE_ENV=production
    #user: "node"
    #working_dir: /home/node/coursewatcher
    #command: "npm run serve"
    #volumes:
      #- /opt/flotilla/data/coursewatcher:/home/node/coursewatcher:z
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  dockersocket:
    # Limits access to the docker socket which is dangerous to expose to
    # containers which see the internet; compromise of these external facing
    # containers could mean granting root access to the entire host (and all
    # other containers).
    image: tecnativa/docker-socket-proxy
    container_name: dockersocket
    privileged: true # Necessary for docker access.
    ports:
      - "127.0.0.1:2375:2375"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - LOG_LEVEL=debug # info
      #- EVENTS=1
      #- PING=1
      #- VERSION=1
      - AUTH=0 # Security critical
      - SECRETS=0 # Security critical
      - POST=0 # Security critical
      #- BUILD=1
      #- COMMIT=1
      #- CONFIGS=1
      - CONTAINERS=1 # For Traefik
      #- DISTRIBUTION=1
      #- EXEC=1
      #- IMAGES=1
      #- INFO=1
      - NETWORKS=1 # For Traefik
      #- NODES=1
      #- PLUGINS=1
      - SERVICES=1 # For Traefik
      #- SESSION=1
      #- SWARM=1
      #- SYSTEM=1
      #- VOLUMES=1
      - TASKS=1 # For Traefik
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - 'traefik.enable=false'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #traefik:
    ## Reverse proxy with auto-routing capabilities. Aimed at HTTP/S but works
    ## with TCP too.
    #image: traefik
    #container_name: traefik
    #command:
      ##- "--configFile=/etc/traefik/traefik.toml"
      #- "--api.insecure=true" # TODO: Change this back.
      #- "--ping"
      #- "--providers.docker=true"
      #- "--providers.docker.endpoint=tcp://dockersocket:2375"
      #- "--providers.docker.defaultRule=Host(`{{ normalize .Name }}.maxocull.com`)"
      #- "--providers.docker.exposedByDefault=true"
      #- "--providers.docker.useBindPortIp=false"
      ##- "--log.filePath=/var/log/traefik.log"
      #- "--log.level=DEBUG"
      #- "--accessLog.filePath=/var/log/access.log"
      #- "--metrics.prometheus"
      #- "--global.sendAnonymousUsage=false"
      #- "--global.checkNewVersion=true"
      #- "--entrypoints.http.address=:80"
      #- "--entrypoints.https.address=:443"
      #- "--entrypoints.traefik.address=:8080"
      #- "--certificatesResolvers.le-main.acme.email=max.ocull@protonmail.com"
      #- "--certificatesResolvers.le-main.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory" # Staging server for testing.
      ##- "--certificatesResolvers.le-main.acme.storage=/var/acme/acme.json"
      #- "--certificatesResolvers.le-main.acme.tlsChallenge=true"
      ##- "--certificatesResolvers.le-main.acme.httpChallenge=true"
      ##- "--certificatesResolvers.le-main.acme.httpChallenge.entryPoint=http"
    #ports:
      #- "80:80"
      #- "8080:8080"
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      ##- DOCKER_HOST=tcp://dockersocket
    #volumes:
      #- /opt/flotilla/data/traefik:/var/acme:z
      #- /opt/flotilla/config/traefik:/etc/traefik:z
      #- /opt/flotilla/data/all/logs/traefik:/var/log:z
    #restart: unless-stopped

  whoami:
    image: containous/whoami
    container_name: whoami
    ports:
      - "127.0.0.1:8001:80"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      ##- DOCKER_HOST=tcp://dockersocket
    #deploy:
      #resources:
        #limits:
          #memory: "40m"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.http-whoami.rule=Host(`whoami.maxocull.com`)"
      - "traefik.http.routers.http-whoami.entryPoints=http"
      - "traefik.http.routers.https-whoami.rule=Host(`whoami.maxocull.com`)"
      - "traefik.http.routers.https-whoami.entryPoints=https"
      - "traefik.http.routers.https-whoami.tls=true"
      - "traefik.http.routers.https-whoami.tls.certResolver=le-main"
      #- "traefik.http.routers.https-whoami.tls.domains[0].main=whoami.maxocull.com"

  watchtower:
    # Not recommended by LinuxServer.io for general use. We will auto-upgrade sparingly.
    image: containrrr/watchtower
    container_name: watchtower
    command:
      - '--label-enable' # By default, containers DO NOT upgrade with this settings, must be explicitly enabled.
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - WATCHTOWER_CLEANUP=true
      #- WATCHTOWER_POLL_INTERVAL=30
      - WATCHTOWER_TIMEOUT=60 # How long to wait before forcibly stopping a container.
      #- WATCHTOWER_DEBUG=true
      - WATCHTOWER_SCHEDULE=0 0 4 * * * # Every night at 04:00.
      - WATCHTOWER_NOTIFICATION_EMAIL_FROM=maxocull.com@gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_TO=max.ocull@protonmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER=smtp.gmail.com
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT=587
      - WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER=maxocull.com@gmail.com
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      #- /opt/flotilla/config/watchtower/config.json:/config.json:z
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #pihole:
    #image: pihole/pihole
    #container_name: pihole
    #ports:
      #- "53:53/tcp"
      #- "53:53/udp"
      #- "67:67/udp"
      #- "127.0.0.1:1188:80/tcp"
      #- "127.0.0.1:2443:443/tcp"
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- "DNS1=84.200.69.80"  # DNS.WATCH servers, with DNSSEC enabled.
      #- "DNS2=84.200.70.40"
      #- "DNSSEC=True"
      ##- "ServerIP=107.217.95.124" # Only required for DHCP.
    #volumes:
      #- /opt/flotilla/config/pihole/pihole:/etc/pihole:z
      #- /opt/flotilla/config/pihole/dnsmasq:/etc/dnsmasq.d:z
    #dns:
      #- 127.0.0.1
      #- 84.200.69.80
    ##cap_add: # DHCP only.
      ##- NET_ADMIN
    ##deploy:
      ##resources:
        ##limits:
          ##memory: "1.6g"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #openvpn:
    #image: kylemanna/openvpn
    #container_name: openvpn
    ##privileged: true # Necessary for sysctl net settings.
    ## TODO: Test that these work.
    #sysctls:
      #- "net.ipv4.ip_forward=1"
      #- "net.ipv6.conf.all.disable_ipv6=0"
      #- "net.ipv6.conf.default.forwarding=1"
      #- "net.ipv6.conf.all.forwarding=1"
    ##cap_add:
      ##- NET_ADMIN
    #volumes:
      #- /opt/flotilla/config/openvpn:/etc/openvpn:z
    #environment:
      #- EASYRSA_KEY_SIZE=4096
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #ports:
      #- "1194:1194/udp"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=false"
    #restart: unless-stopped

  wireguard:
    image: linuxserver/wireguard
    container_name: wireguard
    sysctls:
      - "net.ipv4.conf.all.src_valid_mark=1"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    volumes:
      - /opt/flotilla/config/wireguard:/config:z
      - /lib/modules:/lib/modules
      - /usr/src:/usr/src
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - SERVERURL=wireguard.maxocull.com
      - SERVERPORT=51820
      - PEERS=16
      - PEERDNS=84.200.69.80
      - INTERNAL_SUBNET=10.6.0.0
    ports:
      - "51820:51820/udp"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #monerod:
    #image: rinocommunity/monero:most_recent_tag
    #container_name: monerod
    #volumes:
      #- /opt/flotilla/data/monerod:/monero:z
    #environment:
      #- USER_ID=1000
      #- P2P_BIND_PORT=18080
      #- RPC_BIND_PORT=18081
      #- TZ=America/Indianapolis
    #ports:
      #- "18080:18080"
      #- "18081:18081"
    #command: monerod --non-interactive --restricted-rpc --rpc-bind-ip=0.0.0.0 --confirm-external-bind --public-node --enable-dns-blocklist --enforce-dns-checkpointing --out-peers=8 --data-dir=/monero
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #hashcat:
    #image: maxattax/hashcat-wpa-server-lite:latest
    #container_name: hashcat
    #privileged: true # Necessary for GPU access
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/data/hashcat:/root/.hashcat/wpa-server:z
    #ports:
      #- "127.0.0.1:9111:8000"
      ##- "127.0.0.1:9111:80"
    #deploy:
      #resources:
        #reservations:
          #devices:
            #- driver: nvidia
              #count: 1
              #capabilities: [gpu]
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    depends_on:
      - cleanroom
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - RUN_OPTS="--ProxyConnection=cleanroom:8118"
    volumes:
      - /opt/flotilla/config/jackett:/config:z
      - /opt/flotilla/data/all/torrents:/downloads:z
    ports:
      - "127.0.0.1:9117:9117"
    #deploy:
      #resources:
        #limits:
          #memory: "1.2g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  cleanroom:
    image: binhex/arch-qbittorrentvpn
    container_name: cleanroom
    privileged: true # Necessary for iptables killswitch.
    cap_add:
      - NET_ADMIN
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - WEBUI_PORT=8800
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=000
      - DEBUG=false
      - NAME_SERVERS=128.52.130.209,169.239.202.202,84.200.69.80,84.200.70.40,91.239.100.100,89.233.43.71,37.235.1.174,37.235.1.177,1.1.1.1,1.0.0.1
      - LAN_NETWORK=192.168.0.0/16
      - ENABLE_PRIVOXY=yes
      - VPN_ENABLED=yes
      - VPN_PROV=nordvpn # This is a custom VPN.
    volumes:
      - /opt/flotilla/config/cleanroom:/config:z
      - /opt/flotilla/data/all/torrents:/torrents:z
      - /opt/flotilla/data/cleanroom:/data:z
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "6881:6881"
      - "6881:6881/udp"
      - "127.0.0.1:8800:8800" # Change the WEBUI_PORT environment variable as well!
      - "127.0.0.1:8118:8118" # Change the proxy port for Jackett as well!
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - cleanroom
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=022
    volumes:
      - /opt/flotilla/config/sonarr:/config:z
      - /opt/flotilla/data/all/tvshows:/tv:z
      - /opt/flotilla/data/cleanroom:/data:z
    ports:
      - "127.0.0.1:8989:8989"
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  radarr:
    image: linuxserver/radarr
    container_name: radarr
    depends_on:
      - cleanroom
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=022
    volumes:
      - /opt/flotilla/config/radarr:/config:z
      - /opt/flotilla/data/all/movies:/movies:z
      - /opt/flotilla/data/cleanroom:/data:z
    ports:
      - "127.0.0.1:7878:7878"
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  lidarr:
    image: linuxserver/lidarr
    container_name: lidarr
    depends_on:
      - cleanroom
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=022
    volumes:
      - /opt/flotilla/config/lidarr:/config:z
      - /opt/flotilla/data/all/music:/music:z
      - /opt/flotilla/data/cleanroom:/data:z
    ports:
      - "127.0.0.1:8686:8686"
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  bazarr:
    image: linuxserver/bazarr
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=022
    volumes:
      - /opt/flotilla/config/bazarr:/config:z
      - /opt/flotilla/data/all/tvshows:/tv:z
      - /opt/flotilla/data/all/movies:/movies:z
    ports:
      - "127.0.0.1:6767:6767"
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  prowlarr:
    # TODO: When Prowlarr is released, set this to latest.
    image: linuxserver/prowlarr:develop
    container_name: prowlarr
    depends_on:
      - cleanroom
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK=022
    volumes:
      - /opt/flotilla/config/prowlarr:/config:z
    ports:
      - "127.0.0.1:9696:9696"
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  jellyfin:
    image: linuxserver/jellyfin
    container_name: jellyfin
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - UMASK_SET=<022> #optional
    volumes:
      - /opt/flotilla/config/jellyfin:/config:z
      - /opt/flotilla/data/all/tvshows:/data/tvshows:z
      - /opt/flotilla/data/all/movies:/data/movies:z
      - /opt/flotilla/data/all/music:/data/music:z
      - /opt/flotilla/data/all/books:/data/books:z # Intended for audio books.
      - /opt/flotilla/data/all/photos:/data/photos:z
      - /opt/flotilla/data/jellyfin/transcode:/transcode:z #optional
    ports:
      - "127.0.0.1:8096:8096"
      #- "8920:8920" #optional, https
    devices:
      - /dev/dri:/dev/dri #optional, for video HW acceleration
    #deploy:
      #resources:
        #limits:
          #memory: "6g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  postgres:
    image: postgres:16
    container_name: postgres
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      # md5 was used by legacy postgres versions, so we are retaining it for now.
      - POSTGRES_HOST_AUTH_METHOD=md5
      #- POSTGRES_USER=harbor # Use the default "postgres" user.
      #
    user: "1000" # We need this in order to share certs and make it public.
    ports:
      - "5432:5432"
    volumes:
      # Don't forget to update the command below!
      - /opt/flotilla/config/postgres/postgresql.conf:/etc/postgresql/postgresql.conf:z
      - /opt/flotilla/config/postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf:z
      - /opt/flotilla/data/postgres.16:/var/lib/postgresql/data:z
      - /opt/flotilla/data/letsencrypt/keys:/certs:z
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    command: 'postgres -c config_file=/etc/postgresql/postgresql.conf'
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  pgadmin:
    # Permissions errors are likely caused by files not being owned by user ID 5050 (pgadmin).
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file:
      - /opt/flotilla/secrets.env
    depends_on:
      - postgres
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      # The email below _is_ the username.
      - PGADMIN_DEFAULT_EMAIL=postgres@maxocull.com
    ports:
      - "127.0.0.1:5480:80"
    volumes:
      #- /opt/flotilla/config/pgadmin:/pgadmin4:z
      - /opt/flotilla/data/pgadmin:/var/lib/pgadmin:z
    #deploy:
      #resources:
        #limits:
          #memory: "1.2g"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=PathPrefix(`/pgadmin`)"
      - "traefik.http.routers.pgadmin.entryPoints=http"
      - "traefik.http.middlewares.strip-pgadmin.stripPrefix.prefixes=pgadmin"
      - "traefik.http.routers.pgadmin.middlewares=strip-pgadmin"

  redis:
    # TODO: Resolve some kernel settings to clear up the logs.
    image: redis:6
    container_name: redis
    command: 'redis-server /usr/local/etc/redis/redis.conf'
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - /opt/flotilla/data/redis:/data:z # Remove this line if not persistent.
      - /opt/flotilla/config/redis:/usr/local/etc/redis:Z
    #deploy:
      #resources:
        #limits:
          #memory: "4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  nextcloud:
    image: nextcloud:29-apache
    container_name: nextcloud
    depends_on:
      - redis
      - postgres
      - nextcloud-cron
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_HOST=postgres
      - NEXTCLOUD_ADMIN_USER=entourage
      - REDIS_HOST=redis
      - SMTP_HOST=smtp.gmail.com
      - SMTP_SECURE=tls
      - SMTP_PORT=587
      - SMTP_NAME=maxocull.com
      - MAIL_FROM_ADDRESS=maxocull.com@gmail.com
      - PHP_MEMORY_LIMIT=2G
      - PHP_UPLOAD_LIMIT=2G
      #- MAIL_DOMAIN=mail.maxocull.com
    volumes:
      - /opt/flotilla/config/nextcloud:/var/www/html/config:z
      - /opt/flotilla/data/nextcloud:/var/www/html:z # Share this folder with cron.
    ports:
      - "127.0.0.1:3080:80"
      #- "3090:9000" # for FPM
    #deploy:
      #resources:
        #limits:
          #memory: "2.4g"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  nextcloud-cron:
    # https://github.com/nextcloud/docker/issues/134
    image: nextcloud:29-apache
    container_name: nextcloud-cron
    entrypoint: /cron.sh
    depends_on:
      - redis
      - postgres
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=nextcloud
      - POSTGRES_HOST=postgres
      - NEXTCLOUD_ADMIN_USER=entourage
      - REDIS_HOST=redis
      - SMTP_HOST=smtp.gmail.com
      - SMTP_SECURE=tls
      - SMTP_PORT=587
      - SMTP_NAME=maxocull.com
      - MAIL_FROM_ADDRESS=maxocull.com@gmail.com
      - PHP_MEMORY_LIMIT=2G
      - PHP_UPLOAD_LIMIT=2G
      #- MAIL_DOMAIN=mail.maxocull.com
    volumes:
      - /opt/flotilla/config/nextcloud:/var/www/html/config:z
      - /opt/flotilla/data/nextcloud:/var/www/html:z # Share this folder with cron.
    #deploy:
      #resources:
        #limits:
          #memory: "40m"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #collabora:
    #image: collabora/code
    #container_name: collabora
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- "domain=cloud\\.maxocull\\.com|cloud\\.maxocull\\.net"
      #- "dictionaries=en"
    #volumes:
      #- /opt/flotilla/config/nextcloud:/var/www/html/config:z
      #- /opt/flotilla/data/nextcloud:/var/www/html:z
    #ports:
      #- "127.0.0.1:9980:9980"
    #cap_add:
      #- MKNOD
    ##deploy:
      ##resources:
        ##limits:
          ##memory: "4g"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  # NOTE: Uses a tremendous amount of storage.
  #mastodon:
    #image: lscr.io/linuxserver/mastodon:latest
    #container_name: mastodon
    #depends_on:
      #- redis
      #- postgres
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- LOCAL_DOMAIN=mastodon.maxocull.com # Normally this is `maxocull.com`, but I didn't want to dedicate a webfinger to `mastodon.maxocull.com`: https://docs.joinmastodon.org/admin/config/#web_domain
      #- REDIS_HOST=redis
      #- REDIS_PORT=6379
      #- DB_HOST=postgres
      #- DB_USER=mastodon
      #- DB_NAME=mastodon
      #- DB_PORT=5432
      #- ES_ENABLED=false
      #- SMTP_SERVER=smtp.gmail.com
      #- SMTP_PORT=587
      #- SMTP_LOGIN=maxocull.com@gmail.com
      #- SMTP_FROM_ADDRESS=maxocull.com@gmail.com
      #- S3_ENABLED=false
      #- WEB_DOMAIN=mastodon.maxocull.com #optional
      ##- DB_POOL=5 #optional
    #volumes:
      #- /opt/flotilla/config/mastodon:/config:Z
    #ports:
      #- "127.0.0.1:9080:80"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #gitlab:
    #image: sameersbn/gitlab:16.7.0
    #container_name: gitlab
    #env_file:
      #- /opt/flotilla/secrets.env
    #depends_on:
      #- redis
      #- postgres
      #- registry
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- DB_HOST=postgres
      #- DB_NAME=gitlabhq_production
      #- DB_USER=gitlab
      #- DB_EXTENSION=pg_trgm
      #- REDIS_HOST=redis
      #- REDIS_PORT=6379
      #- NGINX_MAX_UPLOAD_SIZE=250M
      #- GITLAB_HOST=git.maxocull.com
      #- GITLAB_NOTIFY_ON_BROKEN_BUILDS=true
      #- SMTP_ENABLED=true # Flip on after the mail server is setup.
      #- IMAP_ENABLED=false # Flip on after the mail server is setup.
      #- "SMTP_USER=maxocull.com@gmail.com"
      ##- "IMAP_USER=maxocull.com@gmail.com"
      ##- "GITLAB_INCOMING_EMAIL_ADDRESS=maxocull.com+%{key}@gmail.com"
      ##- IMAP_DOMAIN=www.maxocull.com
      ##- IMAP_HOST=mail.maxocull.com
      ##- IMAP_PORT=993
      ##- PIWIK_URL=
      ##- PIWIK_SITE_ID=
      #- GITLAB_REGISTRY_ENABLED=true
      #- GITLAB_REGISTRY_HOST=registry.maxocull.com
      #- GITLAB_REGISTRY_PORT=443
      #- GITLAB_REGISTRY_API_URL=http://registry:5000
      #- GITLAB_REGISTRY_KEY_PATH=/certs/live/maxocull.com/privkey.pem
      ##- GITLAB_REGISTRY_KEY_PATH=/certs/registry.key
    #volumes:
      #- /opt/flotilla/data/gitlab:/home/git/data:z
      ##- /home/git/.ssh/authorized_keys:/home/git/data/.ssh/authorized_keys:z
      #- /home/git/.ssh/authorized_keys_proxy:/home/git/data/.ssh/authorized_keys_proxy:z
      #- /opt/flotilla/data/letsencrypt/keys:/certs:z
      ##- /opt/flotilla/config/registry/certs:/certs:z
    #ports:
      ## Keep this as a string because I guess docker-compose (Python) has a bug?
      #- "127.0.0.1:4080:80"
      #- "127.0.0.1:9922:22"
    ##healthcheck:
      ##test: ["CMD", "/usr/local/sbin/healthcheck"]
      ##interval: 1m
      ##timeout: 5s
      ##retries: 5
      ##start_period: 2m
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #registry:
    #image: registry
    #container_name: registry
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- REGISTRY_LOG_LEVEL=info
      #- REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/registry
      #- REGISTRY_AUTH_TOKEN_REALM=https://git.maxocull.com/jwt/auth
      #- REGISTRY_AUTH_TOKEN_SERVICE=container_registry
      #- REGISTRY_AUTH_TOKEN_ISSUER=gitlab-issuer
      #- REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/live/maxocull.com/fullchain.pem
      ##- REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/certs/registry.crt
      #- REGISTRY_STORAGE_DELETE_ENABLED=true
    #volumes:
      #- /opt/flotilla/data/gitlab/shared/registry:/registry:z
      #- /opt/flotilla/data/letsencrypt/keys:/certs:z
      ##- /opt/flotilla/config/registry/certs:/certs:z
    #ports:
      #- "127.0.0.1:5000:5000"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #gitlab-runner:
    #image: gitlab/gitlab-runner:v16.6.2
    #container_name: gitlab-runner
    #depends_on:
      #- gitlab
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- CI_SERVER_URL=https://git.maxocull.com/
      #- REGISTRATION_TOKEN=_WkSofVsJEziYh-ngWar # Change this to whatever the current token is.
    #volumes:
      #- /opt/flotilla/config/gitlab-runner:/etc/gitlab-runner:z
      #- /var/run/docker.sock:/var/run/docker.sock # Behind a reverse proxy, it's okay.
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #jenkins:
    # TODO: Opt for Gitlab CI?
    #image: jenkins/jenkins:lts
    #container_name: jenkins
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/data/jenkins:/var/jenkins_home:z
      #- /var/run/docker.sock:/var/run/docker.sock # Behind a reverse proxy, it's okay.
    #ports:
      #- "7080:8080"
      #- "50000:50000"
    #restart: unless-stopped

  #postfix:
    #image: mailu/postfix
    #container_name: postfix
    #env_file:
      #- /opt/flotilla/mailu.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/data/postfix:/data:z
      #- /opt/flotilla/config/postfix:/overrides:z
    #ports:
      #- "25:25"
      #- "10025:10025"

  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
    volumes:
      - /opt/flotilla/config/heimdall:/config:z
    ports:
      - "127.0.0.1:1080:80"
      - "127.0.0.1:1443:443"
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  #grafana:
    #image: grafana/grafana
    #container_name: grafana
    #user: "1000"
    #env_file:
      #- /opt/flotilla/secrets.env
    #depends_on:
      #- prometheus
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- "GF_SECURITY_ADMIN_USER=entourage"
      #- "GF_SERVER_DOMAIN=grafana.maxocull.com"
      #- "GF_SERVER_ROOT_URL=https://grafana.maxocull.com"
      #- "GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-pie-chart-panel"
    #volumes:
      #- /opt/flotilla/config/grafana:/etc/grafana:z
      #- /opt/flotilla/data/grafana/data:/var/lib/grafana:z
      ##- /opt/flotilla/data/grafana/home:/usr/share/grafana:z
      #- /opt/flotilla/data/grafana/logs:/var/log/grafana:z
    #ports:
      #- "127.0.0.1:3000:3000"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=false"
    #restart: unless-stopped

  #loki:
    #image: grafana/loki
    #container_name: loki
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #ports:
      #- "127.0.0.1:3100:3100"
    ##command:
      ##- '--config.file=/etc/loki/local-config.yml'
    #labels:
      #- "com.centurylinklabs.watchtower.enable=false"
    #restart: unless-stopped

  #promtail:
    #image: grafana/promtail
    #container_name: promtail
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/data/all/logs:/var/log:z
    ##command:
      ##- '--config.file=/etc/promtail/docker-config.yml'
    #labels:
      #- "com.centurylinklabs.watchtower.enable=false"
    #restart: unless-stopped

  #prometheus:
    #image: prom/prometheus
    #container_name: prometheus
    #user: "1000"
    #depends_on:
      #- nodeexporter
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/config/prometheus:/etc/prometheus:z
      #- /opt/flotilla/data/prometheus:/prometheus:z
    #command:
      #- '--config.file=/etc/prometheus/prometheus.yml'
      #- '--storage.tsdb.path=/prometheus'
    #ports:
      #- "127.0.0.1:9095:9090" # conflicts with Fedora's Cockpit at 9090
    #labels:
      #- "com.centurylinklabs.watchtower.enable=false"
    #restart: unless-stopped

  #nodeexporter:
    #image: quay.io/prometheus/node-exporter
    #container_name: nodeexporter
    #cap_add:
      #- SYS_TIME
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /:/host:ro,rslave
    #command:
      #- '--path.rootfs=/host'
    #ports:
      #- "127.0.0.1:9100:9100"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #portainer:
    #image: portainer/portainer
    #container_name: portainer
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock # Behind a reverse proxy, it's okay.
      #- /opt/flotilla/data/portainer:/data:z
    #ports:
      #- "127.0.0.1:9000:9000"
      #- "127.0.0.1:9001:9001"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #nginx:
    #image: linuxserver/nginx
    #container_name: nginx
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- URL=maxocull.com
      #- SUBDOMAINS=www,cdn,cloud,alan
      #- VALIDATION=http # DNS? so can use wildcards
      ##- DNSPLUGIN=cloudflare #optional
      ##- DUCKDNSTOKEN=<token> #optional
      #- EMAIL=max.ocull@protonmail.com #optional
      #- DHLEVEL=4096 #optional
      #- ONLY_SUBDOMAINS=false #optional
      ##- EXTRA_DOMAINS=<extradomains> #optional
      #- STAGING=false
    #volumes:
      #- /opt/flotilla/config/nginx:/config:z
      #- /opt/flotilla/data/all/logs/nginx:/config/log:z
    #ports:
      #- "80:80"
      #- "443:443"
    #restart: unless-stopped

  #morty:
    #image: dalf/morty
    #container_name: morty
    #cap_drop:
      #- ALL
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #ports:
      #- "127.0.0.1:4040:3000"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #searx:
    #image: searx/searx
    #container_name: searx
    #privileged: true # Necessary for docker access.
    #cap_drop:
      #- ALL
    #cap_drop:
      #- CHOWN
      #- SETGID
      #- SETUID
      #- DAC_OVERRIDE
    #depends_on:
      #- morty
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- BASE_URL=https://search.maxocull.com/
      #- MORTY_URL=http://morty/
    #volumes:
      #- /opt/flotilla/config/searx:/etc/searx:z
    #ports:
      #- "127.0.0.1:4050:8080"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #graphhopper:
    #image: graphhopper/graphhopper
    #container_name: graphhopper
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/data/graphhopper:/data:z
    #ports:
      #- "127.0.0.1:8999:8989"
    ##deploy:
      ##resources:
        ##limits:
          ##memory: "1.2g"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  calibre:
    image: linuxserver/calibre-web
    container_name: calibre
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - DOCKER_MODS=linuxserver/calibre-web:calibre # x86_64 only
    volumes:
      - /opt/flotilla/config/calibre:/config:Z
      - /opt/flotilla/data/all/books:/books:z
    ports:
      - "127.0.0.1:8083:8083"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
    depends_on:
      - cleanroom
      - jackett
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - DOCKER_MODS=linuxserver/calibre-web:calibre # x86_64 only
    volumes:
      - /opt/flotilla/config/lazylibrarian:/config:Z
      - /opt/flotilla/data/cleanroom:/downloads:z
      - /opt/flotilla/data/all/books:/books:z
    ports:
      - "127.0.0.1:5299:5299"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #mayan:
    #image: mayanedms/mayanedms
    #container_name: mayan
    #depends_on:
      #- postgres
      #- redis
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- MAYAN_USER_UID=1000
      #- MAYAN_USER_GID=1000
      #- TZ=America/Indianapolis
      #- MAYAN_DATABASE_ENGINE=django.db.backends.postgresql
      #- MAYAN_DATABASE_HOST=postgres
      #- MAYAN_DATABASE_NAME=mayan
      #- MAYAN_DATABASE_USER=mayan
      #- MAYAN_CELERY_BROKER_URL=redis://redis:6379
      #- MAYAN_CELERY_RESULT_BACKEND=redis://redis:6379
      #- MAYAN_WORKER_FAST_CONCURRENCY=0 # Use all threads, defaults to 1.
      #- MAYAN_WORKER_MEDIUM_CONCURRENCY=0 # Use all threads, defaults to 1.
      #- MAYAN_WORKER_SLOW_CONCURRENCY=0 # Use all threads, defaults to 1.
      ##- MAYAN_APT_INSTALLS="tesseract-ocr-deu tesseract-ocr-spa"
      ##- MAYAN_PIP_INSTALLS="" # redis is already installed
    #volumes:
      #- /opt/flotilla/data/mayan:/var/lib/mayan:z
    #ports:
      #- "127.0.0.1:7980:8000"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  rssbridge:
    image: rssbridge/rss-bridge
    container_name: rssbridge
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
    volumes:
      - /opt/flotilla/config/rssbridge/whitelist.txt:/app/whitelist.txt:z
      - /opt/flotilla/config/rssbridge/config.ini.php:/app/config.ini.php:z
    ports:
      - "127.0.0.1:5080:80"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  #kimai:
    #image: kimai/kimai2:apache-debian-master-prod
    #container_name: kimai
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- TZ=America/Indianapolis
      #- APP_ENV=prod
      #- TRUSTED_HOSTS=127.0.0.1,letsencrypt,localhost,nginx,${HOSTNAME},maxocull.com,maxocull.net,kimai.maxocull.com,kimai.maxocull.net
      #- ADMINMAIL=kimai@maxocull.com
    #volumes:
      #- /opt/flotilla/config/kimai/local.yaml:/opt/kimai/config/packages/local.yaml:z
      #- /opt/flotilla/data/kimai:/opt/kimai/var/data:z
      #- kimai_public:/opt/kimai/public # Named volume required: https://tobybatch.github.io/kimai2/docker-compose.html#docker-compose
    #ports:
      #- "127.0.0.1:11080:8001"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #inspircd:
    #image: inspircd/inspircd-docker
    #container_name: inspircd
    #depends_on:
      #- atheme
    #env_file:
      #- /opt/flotilla/secrets.env
    #user: "10000:10000"
    #environment:
      #- PUID=10000
      #- PGID=10000
      #- TZ=America/Indianapolis
      #- INSP_NET_SUFFIX=.maxocull.com
      #- INSP_NET_NAME=Entourage
      #- INSP_SERVER_NAME=irc.maxocull.com
      #- INSP_ADMIN_NAME=Max OCull
      #- INSP_ADMIN_NICK=Maxattax
      #- INSP_ENABLE_DNSBL=yes
      #- INSP_OPER_FINGERPRINT=553de3f801cd432be5a0fb4d2a1baa8db60cb326a26bd6253cfe93d82a9f32f5
      #- INSP_OPER_NAME=Maxattax
      #- INSP_SERVICES_NAME=atheme.maxocull.com
      #- INSP_SERVICES_IPADDR=atheme
      #- INSP_SERVICES_PASSWORD=2fc28a4d34471e34c6ab2e3067aabb548c930fe583546a6c2b550a9c18cc1e07
      #- INSP_SERVICES_TLS_ON=yes
      ##- INSP_SERVICE_OPTIONS=
      ## TODO: Fill in TLS certs.
    #volumes:
      #- /opt/flotilla/config/inspircd/conf:/inspircd/conf:z
      #- /opt/flotilla/config/inspircd/conf.d:/inspircd/conf.d:z
      ##- /opt/flotilla/data/letsencrypt/keys/archive/maxocull.com/cert1.pem:/inspircd/conf/cert.pem:ro
      ##- /opt/flotilla/data/letsencrypt/keys/archive/maxocull.com/privkey1.pem:/inspircd/conf/key.pem:ro
    #ports:
      #- "6667:6667"
      #- "6697:6697"
      ##- "7000:7000"
      ##- "7001:7001"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #atheme:
    #image: ovdnet/atheme
    #container_name: atheme
    #env_file:
      #- /opt/flotilla/secrets.env
    #user: "10000:10000"
    #environment:
      #- PUID=10000
      #- PGID=10000
      #- TZ=America/Indianapolis
    #volumes:
      #- /opt/flotilla/config/atheme:/atheme/etc:z
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #jitsi:
    #image: jitsi/web
    #container_name: jitsi
    #depends_on:
      #- prosody
      #- jicofo
      #- jvb
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- ENABLE_AUTH=1
      #- ENABLE_GUESTS=1
      #- ENABLE_LETSENCRYPT=0
      #- ENABLE_HTTP_REDIRECT=0
      #- ENABLE_TRANSCRIPTIONS=0
      #- DISABLE_HTTPS=1
      #- JICOFO_AUTH_USER=focus
      ##- LETSENCRYPT_DOMAIN
      ##- LETSENCRYPT_EMAIL
      #- PUBLIC_URL=https://meet.maxocull.com
      ## These XMPP settings should work out of the box.
      #- XMPP_DOMAIN=meet.jitsi
      #- XMPP_AUTH_DOMAIN=prosody
      #- XMPP_BOSH_URL_BASE=http://prosody:5280
      #- XMPP_GUEST_DOMAIN=guest.meet.jitsi
      #- XMPP_MUC_DOMAIN=muc.meet.jitsi
      #- XMPP_RECORDER_DOMAIN=recorder.meet.jitsi
      ##- ETHERPAD_URL_BASE
      ##- JIBRI_BREWERY_MUC
      ##- JIBRI_PENDING_TIMEOUT
      ##- JIBRI_XMPP_USER
      ##- JIBRI_XMPP_PASSWORD
      ##- JIBRI_RECORDER_USER
      ##- JIBRI_RECORDER_PASSWORD
      #- ENABLE_RECORDING=0
    #volumes:
      #- /opt/flotilla/config/jitsi/web:/config:z
      #- /opt/flotilla/config/jitsi/letsencrypt:/etc/letsencrypt:z
      ##- /opt/flotilla/config/jitsi/transcripts:/usr/share/jitsi-meet/transcripts:z
    #ports:
      #- "127.0.0.1:6080:80"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #prosody:
    #image: jitsi/prosody
    #container_name: prosody
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- AUTH_TYPE=internal
      #- ENABLE_AUTH=1
      #- ENABLE_GUESTS=1
      ##- GLOBAL_MODULES
      ##- GLOBAL_CONFIG
      ##- LDAP_URL
      ##- LDAP_BASE
      ##- LDAP_BINDDN
      ##- LDAP_BINDPW
      ##- LDAP_FILTER
      ##- LDAP_AUTH_METHOD
      ##- LDAP_VERSION
      ##- LDAP_USE_TLS
      ##- LDAP_TLS_CIPHERS
      ##- LDAP_TLS_CHECK_PEER
      ##- LDAP_TLS_CACERT_FILE
      ##- LDAP_TLS_CACERT_DIR
      ##- LDAP_START_TLS
      #- XMPP_AUTH_DOMAIN=auth.meet.jitsi
      #- XMPP_BOSH_URL_BASE=http://prosody:5280
      #- XMPP_GUEST_DOMAIN=guest.meet.jitsi
      #- XMPP_MUC_DOMAIN=muc.meet.jitsi
      #- XMPP_DOMAIN=meet.jitsi
      #- XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
      #- XMPP_MODULES=
      #- XMPP_MUC_MODULES=
      #- XMPP_INTERNAL_MUC_MODULES=
      #- XMPP_RECORDER_DOMAIN=recorder.meet.jitsi
      #- JICOFO_AUTH_USER=focus
      #- JVB_AUTH_USER=jvb
      ##- JIGASI_XMPP_USER
      ##- JIGASI_XMPP_PASSWORD
      ##- JIBRI_XMPP_USER
      ##- JIBRI_XMPP_PASSWORD
      ##- JIBRI_RECORDER_USER
      ##- JIBRI_RECORDER_PASSWORD
      ##- JWT_APP_ID
      ##- JWT_APP_SECRET
      ##- JWT_ACCEPTED_ISSUERS
      ##- JWT_ACCEPTED_AUDIENCES
      ##- JWT_ASAP_KEYSERVER
      ##- JWT_ALLOW_EMPTY
      ##- JWT_AUTH_TYPE
      ##- JWT_TOKEN_AUTH_MODULE
      ##- LOG_LEVEL
    #volumes:
      #- /opt/flotilla/config/prosody:/config:z
    #ports:
      #- "127.0.0.1:5222:5222"
      #- "127.0.0.1:5347:5347"
      #- "127.0.0.1:5280:5280"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #jicofo:
    #image: jitsi/jicofo
    #container_name: jicofo
    #depends_on:
      #- prosody
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- ENABLE_AUTH=1
      #- XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
      #- XMPP_AUTH_DOMAIN=auth.meet.jitsi
      #- XMPP_DOMAIN=meet.jitsi
      #- XMPP_SERVER=xmpp.meet.jitsi
      #- JICOFO_AUTH_USER=focus
      #- JICOFO_RESERVATION_REST_BASE_URL=http://reservation.example.com
      #- JVB_BREWERY_MUC=jvbbrewery
      ##- JIGASI_BREWERY_MUC
      ##- JIGASI_SIP_URI
      ##- JIBRI_BREWERY_MUC
      ##- JIBRI_PENDING_TIMEOUT
    #volumes:
      #- /opt/flotilla/config/jicofo:/config:z
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #jvb:
    #image: jitsi/jvb
    #container_name: jvb
    #depends_on:
      #- prosody
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- DOCKER_HOST_ADDRESS=meet.maxocull.com
      #- XMPP_AUTH_DOMAIN=auth.meet.jitsi
      #- XMPP_INTERNAL_MUC_DOMAIN=internal-muc.meet.jitsi
      #- XMPP_SERVER=xmpp.meet.jitsi
      #- JVB_AUTH_USER=jvb
      #- JVB_BREWERY_MUC=jvbbrewery
      #- JVB_PORT=10000
      #- JVB_TCP_HARVESTER_DISABLED=true
      #- JVB_TCP_PORT=10001
      #- JVB_STUN_SERVERS=stun.l.google.com:19302,stun.sipnet.net:3478,stun.sipgate.net:3478,meet-jit-si-turnrelay.jitsi.net:443
      ##- JVB_ENABLE_APIS
    #volumes:
      #- /opt/flotilla/config/jvb:/config:z
    #ports:
      #- "10000:10000/udp"
      #- "10001:10001"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #greenlight:
    ## http://docs.bigbluebutton.org/greenlight/gl-install.html#installing-on-a-bigbluebutton-server
    #image: bigbluebutton/greenlight:v2
    #container_name: greenlight
    #depends_on:
      #- bigbluebutton
    #env_file:
      #- /opt/flotilla/secrets.env
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
      #- DB_ADAPTER=postgresql
      #- DB_HOST=postgres
      #- DB_NAME=greenlight_production
      #- DB_USERNAME=greenlight
      #- DEFAULT_REGISTRATION=open
      #- HELP_URL=https://docs.bigbluebutton.org/greenlight/gl-overview.html
      #- ENABLE_GOOGLE_CALENDAR_BUTTON=true
      #- NUMBER_OF_ROWS=25
      #- PAGINATION_NUMBER=25
      #- ROOM_FEATURES=mute-on-join,require-moderator-approval,anyone-can-start,all-join-moderator
      #- RELATIVE_URL_ROOT=/b
      #- ALLOW_GREENLIGHT_ACCOUNTS=true
      #- ALLOW_MAIL_NOTIFICATIONS=true
      #- SMTP_SERVER=smtp.gmail.com
      #- SMTP_PORT=587
      #- SMTP_DOMAIN=gmail.com
      #- SMTP_USERNAME=maxocull.com@gmail.com
      #- SMTP_STARTTLS_AUTO=true
      #- SMTP_AUTH=plain
    #volumes:
      ##- /opt/flotilla/config/greenlight:/usr/src/app:z
      #- /opt/flotilla/data/greenlight/log:/usr/src/app/log:z
    #ports:
      #- "127.0.0.1:5002:80"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  #bigbluebutton:
    #image: mirhosting/bigbluebutton
    #container_name: bigbluebutton
    #env_file:
      #- /opt/flotilla/secrets.env
    #entrypoint: bbb-conf
    #command:
      #- "--start"
    #environment:
      #- PUID=1000
      #- PGID=1000
      #- TZ=America/Indianapolis
    ##volumes:
      ##- /opt/flotilla/data/bigbluebutton:/var/bigbluebutton:z
    #ports:
      #- "127.0.0.1:5001:80"
      #- "127.0.0.1:5066:5066"
    #labels:
      #- "com.centurylinklabs.watchtower.enable=true"
    #restart: unless-stopped

  znc:
    image: lscr.io/linuxserver/znc
    container_name: znc
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - /opt/flotilla/config/znc:/config:z
      # https://wiki.znc.in/Signed_SSL_certificate#Certbot
      - /opt/flotilla/data/letsencrypt/keys/live/maxocull.com/priv-fullchain-bundle.pem:/config/znc.pem:ro
    ports:
      - 6501:6501
      - 6502:6502
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  nfs:
    image: ghcr.io/obeone/nfs-server
    container_name: nfs
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      #- NFS_VERSION=3
      #- NFS_DISABLE_VERSION_3=1
      - NFS_LOG_LEVEL=DEBUG
    cap_add:
      - SYS_ADMIN
      - SYS_MODULE
    volumes:
      - /opt/flotilla/data/nfs/flamenco:/srv/flamenco:z
      - /opt/flotilla/config/nfs/exports:/etc/exports:z
      - /lib/modules:/lib/modules:ro
    deploy:
      resources:
        limits:
          memory: 512M
    ports:
      # For NFSv4:
      - 2049:2049
      # For NFSv3:
      - 111:111
      - 32765:32765
      - 32767:32767
    restart: unless-stopped

  gitea-runner:
    image: gitea/act_runner:latest
    container_name: gitea-runner
    env_file:
      - /opt/flotilla/secrets.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Indianapolis
      - "CONFIG_FILE=/config/config.yaml"
      - "GITEA_INSTANCE_URL=https://git.alanocull.com"
      - "GITEA_RUNNER_NAME=entourage-alfa"
    volumes:
      - /opt/flotilla/config/gitea-runner:/config:z
      - /opt/flotilla/data/gitea-runner:/data:z
      # The docker socket allows it to spawn child containers.
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  minetest:
    image: lscr.io/linuxserver/minetest
    container_name: minetest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
      #- CLI_ARGS="--gameid minetest"
    volumes:
      - /opt/flotilla/data/minetest:/config/.minetest:z
    ports:
      - 30000:30000/udp
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped

  minecraft:
    # docker exec minecraft rcon-cli stop
    # docker exec minecraft rcon-cli stop
    image: itzg/minecraft-server
    container_name: minecraft
    environment:
      - UID=1000
      - GID=1000
      - TZ=America/Indianapolis
      - VERSION=23w12a
      - EULA=TRUE
      #- CONSOLE=FALSE
      - GUI=FALSE
      - MEMORY=4G
      - "JVM_XX_OPTS=-XX:+UseG1GC -XX:G1HeapRegionSize=32M -XX:+UnlockExperimentalVMOptions -XX:MaxGCPauseMillis=50 -XX:TargetSurvivorRatio=90 -XX:G1NewSizePercent=50 -XX:G1MaxNewSizePercent=80 -XX:+ParallelRefProcEnabled -XX:CodeCacheExpansionSize=1M -XX:InitialCodeCacheSize=32M -XX:ReservedCodeCacheSize=64M -XX:-TieredCompilation -XX:CompileThreshold=1000 -XX:CICompilerCount=16 -XX:CompilerThreadPriority=3 -XX:FreqInlineSize=325 -XX:InlineSmallCode=2000 -XX:MaxInlineSize=1024"
      # These below are only used if server.properties doesn't already exist.
      - SERVER_NAME=maxocull.com
      - MOTD=Welcome to maxocull.com!
      - DIFFICULTY=hard
      - OPS=Maxattax,StagMath,houndeyex
      - "ICON=https://www.gravatar.com/avatar/7143b51c5a72389622b31375e5e91b5b"
      - MAX_PLAYERS=20
      - ALLOW_NETHER=true
      - ANNOUNCE_PLAYER_ACHIEVEMENTS=true
      - ENABLE_COMMAND_BLOCK=true
      - FORCE_GAMEMODE=false
      - GENERATE_STRUCTURES=true
      - HARDCORE=false
      - SPAWN_ANIMALS=true
      - SPAWN_MONSTERS=true
      - SPAWN_NPCS=true
      - SPAWN_PROTECTION=128
      - VIEW_DISTANCE=14
      - MODE=survival
      - PVP=true
      - LEVEL_TYPE=AMPLIFIED
      - LEVEL=world
      - ALLOW_FLIGHT=false
    volumes:
      - /opt/flotilla/data/minecraft:/data:Z
    ports:
      - "25565:25565"
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
    restart: unless-stopped
